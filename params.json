{
  "name": "Einstein",
  "tagline": "Making your dumb devices smarter",
  "body": "## Inspiration\r\n\r\nSmart bulbs are too expensive for what they are. We figured that we could make a web-app, smart LED that can take advantage of the endless features of your Amazon echo.\r\n\r\n## What it does\r\n\r\nUsing Amazon AWS, certain commands are triggered with the voice, such as color change, whose values will then be sent to the nodejs webserver and finally through a monodirectional pipe to the python scripts that directly control the LED.\r\n\r\n## How we built it\r\n\r\nTo program Einstein most efficiently, we divided and conquered the work - front end, backend python, backend javascript, Alexa.\r\n\r\nIn the end, we feel that this was the best way to manage our time.\r\n\r\n## Challenges we ran into\r\n\r\nWe had trouble trying to setup threading that would allow Einstein to keep the LEDs flashing at their current PWM, but check for new arguments through the pipe.\r\n\r\n## Accomplishments that we're proud of\r\n\r\nWe were able to a program that can send commands from an Amazon Alexa, using our voices, to change the color of an LED.\r\n\r\n## What we learned\r\n\r\nThe challenges taught us a lot about what you should and should not use when you're crunched for time- avoid using anything but javascript and python. Biggest of all: DON'T USE PIP\r\n\r\n## What's next for Einstein\r\n\r\nWe would like to be able to use the GPIOs to feed the base of a transistor that allows current to flow from any electronic device to ground, essentially making any electronic device \"smart.\"",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}